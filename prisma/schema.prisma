generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider            = "typegraphql-prisma"
  output              = "../prisma/generated/type-graphql"
  emitTranspiledCode  = "true"
  formatGeneratedCode = "false"
}

datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id            String      @id @default(cuid())
  email         String      @unique
  emailVerified DateTime?
  firstName     String
  lastName      String
  password      String
  role          Role        @default(ADMIN)
  image         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  accounts      Account[]
  sessions      Session[]
  workspaces    Workspace[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  provider          String
  providerAccountId String
  type              String
  access_token      String?
  expires_at        Int?
  user              User    @relation(fields: [userId], references: [id])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Workspace {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String?
  user        User?    @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  MEMBER
  USER
}
